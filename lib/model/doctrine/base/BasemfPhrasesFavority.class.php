<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('mfPhrasesFavority', 'doctrine');

/**
 * BasemfPhrasesFavority
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $phrase_id
 * @property sfGuardUser $sfGuardUser
 * @property mfPhrase $mfPhrase
 * 
 * @method integer           getUserId()      Returns the current record's "user_id" value
 * @method integer           getPhraseId()    Returns the current record's "phrase_id" value
 * @method sfGuardUser       getSfGuardUser() Returns the current record's "sfGuardUser" value
 * @method mfPhrase          getMfPhrase()    Returns the current record's "mfPhrase" value
 * @method mfPhrasesFavority setUserId()      Sets the current record's "user_id" value
 * @method mfPhrasesFavority setPhraseId()    Sets the current record's "phrase_id" value
 * @method mfPhrasesFavority setSfGuardUser() Sets the current record's "sfGuardUser" value
 * @method mfPhrasesFavority setMfPhrase()    Sets the current record's "mfPhrase" value
 * 
 * @package    frases
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasemfPhrasesFavority extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('mf_phrases_favority');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('phrase_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_spanish_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('mfPhrase', array(
             'local' => 'phrase_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}