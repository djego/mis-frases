<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('mfPhrase', 'doctrine');

/**
 * BasemfPhrase
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $content
 * @property integer $category_id
 * @property string $author
 * @property integer $user_id
 * @property integer $visits
 * @property integer $comments
 * @property mfCategory $Category
 * @property sfGuardUser $User
 * @property Doctrine_Collection $MfComments
 * @property Doctrine_Collection $Favorities
 * 
 * @method string              getTitle()       Returns the current record's "title" value
 * @method string              getContent()     Returns the current record's "content" value
 * @method integer             getCategoryId()  Returns the current record's "category_id" value
 * @method string              getAuthor()      Returns the current record's "author" value
 * @method integer             getUserId()      Returns the current record's "user_id" value
 * @method integer             getVisits()      Returns the current record's "visits" value
 * @method integer             getComments()    Returns the current record's "comments" value
 * @method mfCategory          getCategory()    Returns the current record's "Category" value
 * @method sfGuardUser         getUser()        Returns the current record's "User" value
 * @method Doctrine_Collection getMfComments()  Returns the current record's "MfComments" collection
 * @method Doctrine_Collection getFavorities()  Returns the current record's "Favorities" collection
 * @method mfPhrase            setTitle()       Sets the current record's "title" value
 * @method mfPhrase            setContent()     Sets the current record's "content" value
 * @method mfPhrase            setCategoryId()  Sets the current record's "category_id" value
 * @method mfPhrase            setAuthor()      Sets the current record's "author" value
 * @method mfPhrase            setUserId()      Sets the current record's "user_id" value
 * @method mfPhrase            setVisits()      Sets the current record's "visits" value
 * @method mfPhrase            setComments()    Sets the current record's "comments" value
 * @method mfPhrase            setCategory()    Sets the current record's "Category" value
 * @method mfPhrase            setUser()        Sets the current record's "User" value
 * @method mfPhrase            setMfComments()  Sets the current record's "MfComments" collection
 * @method mfPhrase            setFavorities()  Sets the current record's "Favorities" collection
 * 
 * @package    frases
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasemfPhrase extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('mf_phrase');
        $this->hasColumn('title', 'string', 50000, array(
             'type' => 'string',
             'length' => 50000,
             ));
        $this->hasColumn('content', 'string', 50000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50000,
             ));
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('author', 'string', 50000, array(
             'type' => 'string',
             'length' => 50000,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('visits', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('comments', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_spanish_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('mfCategory as Category', array(
             'local' => 'category_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('mfComment as MfComments', array(
             'local' => 'id',
             'foreign' => 'phrase_id'));

        $this->hasMany('mfPhrasesFavority as Favorities', array(
             'local' => 'id',
             'foreign' => 'phrase_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}